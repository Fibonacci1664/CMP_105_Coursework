// INCLUDES.
#include "Credits.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// CONSTRUCTOR/S & DESTRUCTOR.
Credits::Credits(sf::RenderWindow* hwnd, Input* in, GameState* gs, AudioManager* aud) : Screen(hwnd, in, gs, aud)
{
	initCreditsBg();
}

Credits::~Credits()
{

}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// FUNCTIONS.
void Credits::handleInput(float dt)
{

}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Credits::update(float dt)
{
	bottomOfCreditsPos = creditsBg.getPosition().y + creditsBg.getSize().y;
	rollCredits(dt);
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Credits::render()
{
	beginDraw();
	window->draw(creditsBg);
	endDraw();
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Credits::beginDraw()
{
	window->clear(sf::Color(0, 0, 0));
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Credits::endDraw()
{
	window->display();
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Credits::initAudio()
{

}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Credits::initCreditsBg()
{
	if (!creditsBgTexture.loadFromFile("gfx/credits/credits.png"))
	{
		std::cerr << "Sorry could not load credits image!\n";
	}

	creditsBg.setSize(sf::Vector2f(861.6f, 1671));
	creditsBg.setOrigin(sf::Vector2f(creditsBg.getSize().x / 2.0f, 0));
	creditsBg.setPosition(sf::Vector2f(window->getSize().x / 2.0f, window->getSize().y / 2.0f));
	creditsBg.setTexture(&creditsBgTexture);

	bottomOfCreditsPos = creditsBg.getOrigin().y + creditsBg.getSize().y;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Credits::rollCredits(float & dt)
{
	// Scroll credits up.
	creditsBg.setPosition(sf::Vector2f(creditsBg.getPosition().x, creditsBg.getPosition().y - (100 * dt)));

	if (bottomOfCreditsPos < 0)
	{
		window->close();
	}
}
